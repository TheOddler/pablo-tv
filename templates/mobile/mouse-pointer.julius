const webSocket = new ReconnectingWebSocket('@{MobileHomeR}');
const debugEl = document.getElementById("debug");
const scalingFactorSlider = document.getElementById("scaling-factor-slider");

let orientation;
let centerOrientation;
let leftRight;
let upDown;
let scalingFactor = 5;
let jitterReduction = 10;

function diffAngle(a, b) {
  let diff = (a - b + 720) % 360;
  if (diff > 180) diff -= 360;
  return diff;
}

function slowMove(from, to) {
  return from + (to - from) / jitterReduction;
}

function handleOrientation(event) {
  orientation = {
    leftRight: event.alpha, // [0, 360[
    upDown: event.beta, // [-180, 180]
  };

  // If this is the first time this is called, do some setup
  if (!centerOrientation) resetCenter();
  if (!leftRight) leftRight = orientation.leftRight;
  if (!upDown) upDown = orientation.upDown;

  const angleLR = diffAngle(orientation.leftRight, centerOrientation.leftRight);
  const angleUD = diffAngle(orientation.upDown, centerOrientation.upDown);
  const newLR = Math.tan(angleLR * Math.PI / 180);
  const newUD = Math.tan(angleUD * Math.PI / 180);
  leftRight = slowMove(leftRight, newLR);
  upDown = slowMove(upDown, newUD);

  debugEl.innerHTML = `
    <p>center: ${centerOrientation.leftRight.toFixed(2)}, ${centerOrientation.upDown.toFixed(2)}</p>
    <p>orientation: ${orientation.leftRight.toFixed(2)}, ${orientation.upDown.toFixed(2)}</p>

    <p>leftRight: ${leftRight.toFixed(2)}</p>
    <p>upDown: ${upDown.toFixed(2)}</p>
  `;

  sendOrientation();
};

const sendOrientation = throttle(() => {
  sendActionWS(webSocket, {
    tag: "PointMouse",
    leftRight: -leftRight * scalingFactor,
    upDown: -upDown * scalingFactor,
  });
});

function resetCenter() {
  centerOrientation = orientation;
}

function onScalingFectorSliderChange(value) {
  scalingFactor = value;
}

function clickMouse() {
  sendActionWS(webSocket, { tag: "ClickMouse" });
}

window.addEventListener("deviceorientation", handleOrientation, true);
scalingFactorSlider.addEventListener("input", (e) => onScalingFectorSliderChange(e.target.value));
scalingFactorSlider.value = scalingFactor;
