function playPath(self) {
  mkWatchedChangingFunction("PlayPath", true)(self);
}

function markAsWatched(self) {
  mkWatchedChangingFunction("MarkAsWatched", true)(self);
}

function markAsUnwatched(self) {
  mkWatchedChangingFunction("MarkAsUnwatched", false)(self);
}

function mkWatchedChangingFunction(actionTag, watchedStatus) {
  return async function (self) {
    const pathElement = findElementWithPath(self);
    if (!pathElement) {
      return;
    }

    const path = pathElement.dataset.path;
    const response = await sendAction({ tag: actionTag, path });

    if (response.ok) {
      pathElement.classList.toggle("watched", watchedStatus);
    }
  };
}

/**
 * @param {Element} element
 * @returns {Element | null}
*/
function findElementWithPath(element) {
  while (element && element.dataset.path === undefined) {
    element = element.parentElement;
  }
  return element;
}

function playAll() {
  playPath("#{absPathJS}");
}
