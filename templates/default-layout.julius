// Helpers
function throttle(func, timeout = 50) {
  let timer;
  let latestFunc;
  return (...args) => {
    latestFunc = func;
    if (!timer) {
      timer = setTimeout(() => { latestFunc.apply(this, args); timer = null; }, timeout);
    }
  };
}

function clickMouse() {
  sendWebSocketMessage({ tag: "ClickMouse" });
}

// Websocket stuff
const webSocket = new ReconnectingWebSocket('@{HomeR}');

function sendWebSocketMessage(message) {
  if (webSocket.readyState === WebSocket.OPEN) {
    // console.log('Sending message:', message);
    webSocket.send(JSON.stringify(message));
  }
  else {
    console.log('WebSocket is not open. Message not sent:', message);
  }
}
