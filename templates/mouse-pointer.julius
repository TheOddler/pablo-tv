window.addEventListener("deviceorientation", handleOrientation, true);

const debugEl = document.getElementById("debug");

let orientation;
let centerOrientation;
let scalingFactor = 1 / 22.5;
let jitterReduction = 20;

function diffAngle(a, b) {
  let diff = (a - b + 720) % 360;
  if (diff > 180) diff -= 360;
  return diff;
}

function handleOrientation(event) {
  // If this is the first time we get orientation, do some setup
  if (!orientation) {
    orientation = {
      leftRight: event.alpha,
      upDown: event.beta,
    };
    resetCenter();
  }

  // Slowly move orientation to prevent jittering
  orientation = {
    leftRight: orientation.leftRight + (event.alpha - orientation.leftRight) / jitterReduction,
    upDown: orientation.upDown + (event.beta - orientation.upDown) / jitterReduction,
  };
  
  // orientation = {
  //   leftRight: event.alpha, // [0, 360[
  //   upDown: event.beta, // [-180, 180]
  // };

  sendOrientation();
}

const sendOrientation = throttle(() => {
  const leftRight = diffAngle(orientation.leftRight, centerOrientation.leftRight);
  const upDown = diffAngle(orientation.upDown, centerOrientation.upDown);

  pointMouse(-leftRight * scalingFactor, -upDown * scalingFactor);
}, 100);

function resetCenter() {
  centerOrientation = orientation;
}
